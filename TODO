NOTE:
	TODOs are divided in three parts: TO-BE-DONE, DONE and DONE-RECHECK.

	TODOs in TO-BE-DONE are ordered in a least-to-last important order.
	Take in charge whatever TODO you like to complete but remember that
	the least important are probably the blocking ones ... so they should
	be completed first ...

	When a TODO in TO-BE-DONE has been completed it must be moved to DONE
	or DONE-RECHECK if it needs further checking.

	In DONE and DONE-RECHECK a date or a release version (the same that
	the ChangeLog shows) number should be added too (in order to remember
	when that TODO has been declared completed ...

TO-BE-DONE:
* tools/scripts/test-*: Remove test files (test-*.txt) when the test runs
  smoothly (XFAIL case).

* src/Makefile.def: fix the various AGTEMPLATES, AGLIBRARY variables.

* fix the tools/autogen/string.scm and tools/autogen/file.scm files. Use the
  functions in the autogen related templates.

* tools/autotools/m4/ax_string_intersect.m4: Fix the bug, its description is
  in the macro.

* Add a test in the `make check' target in order to avoid the use of multibyte
  character ('\') in sed substitution command (s///) in order to gain more
  portability (ex. do not use things like this: `sed -e 's/^.*/\t/' on
  FreeBSD).

* Add a coder/decoder program for testing coding/decoding algorithms (add the
  coder and decoder in tools directory).

* tools/scripts/map2ie.awk.in, tools/scripts/symsdump.awk.in: Fix the errors
  when the kernel get stripped and a 'make' is issued on the tree. The error
  is:

    /usr/bin/nm: kernel: no symbols

* Move the src/archs/ia32/keyboard* related code to a i8042.* file.

* Fix the modules build problem when compiling with bfd version 2.15 (on
  FreeBSD host ld exits with segmentation fault).

* tools/scripts/*.awk.in: Remove all code that depends on 'for (x in y)' or our
  regression tests will fail.

* Add regression tests for tools/scripts awk libraries

* Remove configure link in src/arch (it is not portable). Remove the LN_S check
  in configure.ac

* complete debugger completion in kernel/dbg/debugger/completion.c

* Remove the hard-wired file name in tools/moddb/Makefile.am

* Handle kernel options via fsm (using fsmgen to generate it).

* tools/scripts/*.awk: Start using the strerror() function to display all the
  system errors.

* tools/scripts/*.awk: Fix the common behaviour when RS="" ... at the present
  all is broken.

* tools/autotools/m4/ax_asm_uscore.m4: Fix the test, it is really crappy and
  it will work only for gcc...

* tools/scripts/Makefile.am: Complete pass 2 in check-local target (check for
  detecting function calls with spaces between function-name and parentheses).
  Don't leave white spaces before the parentheses in user functions calls; GNU
  awk will reject it.

* tools/scripts/*.awk: Change all external programs invocations from long
  arguments to short arguments (in order to be more portable)

* src/include/config.h: Remove the #ifndef ASM ...

* tools/scripts/*.awk: Add checks in order to detect when a parameter is
  specified multiple times (like -P in ifdefscheck.awk).

* tools/scripts/Makefile.am: Fix the 'check' target ... it is not reporting
  duplicated symbols...

* Use AC_CHECK_TOOL instead of AC_PATH_PROG for nm, objdump and so on in
  configure.ac.

* Reenable the -f (fatal) flag on tools/scripts/symscheck.awk and
  tools/scripts/ifdefscheck.awk (and other tools too) in src/Makefile.am.

* Fix the "protect" variable in tools/scripts/Makefile.am in order to protect
  even the ' character.

* Check in tools/scripts/*.in the awk scripts in order to verify that:

     If you want your program to be deterministic, don't depend on `for'
     on arrays:

          $ cat for.awk
          END {
            arr["foo"] = 1
            arr["bar"] = 1
            for (i in arr)
              print i
          }
          $ gawk -f for.awk </dev/null
          foo
          bar
          $ nawk -f for.awk </dev/null
          bar
          foo

  From the autoconf info page 'Limitations of Usual Tools'

* Fix the dependencies in src/Makefile.am. Example:

    include/config/userconfig.h: Makefile $(CFG_OUTPUT) $(SH2H)
	    $(SH2H) USERCONFIG_H < $(CFG_OUTPUT) > include/config/userconfig.h

  should be

    include/config/userconfig.h: Makefile $(CFG_OUTPUT) $(SH2H).in
	    $(SH2H) USERCONFIG_H < $(CFG_OUTPUT) > include/config/userconfig.h

  but $(SH2H).in is created in tools/scripts directory ... these dependencies
  are completely useless ... but must be retained in order to rebuild the
  target if the tool is changed

* src/dbg/debugger/builtin-commands.c: Add the sub-command functionality in
  order to have commands like 'memory pmm' and 'memory heap' instead of
  'pmm' and 'heap' separately (like gdb commands).

* src/*: We should replace lot of asserts with proper checks (and expect()
  calls). We should remove all the useless asserts.

* src/libs/c/stdio.c: Fix all return values (and all the referencing
  functions).

* src/libs/c/stdio.c: Fix eof and error indicator in streams.

* Add a check in 'check' target in order to see if panic() gets called with
  some '\n' (only at end of line).

* src/libs/debug/gdb.c: Adde support for kernel debugging via GDB (GDB
  requires serial line support ... */

* src/Makefile.am: The config target doesn't handle its dependencies ...

* configure.ac: Add all the needed tests in order to check for required GCC
  features (like __builtin_* for stdarg.h macros).

* tools/ids2def/pci2def, tools/ids2def/usb2def: Add code for the remaining
  classes/devices etc. etc.

* configure.ac: Fix the checks for needed and wanted packages (they should
  bail-out or printing a message then stop/continue depending on what we need
  to do ...

* Makefile.ams: Add the maintainer-check rule

* In order to avoid automake problems follow the following rules for all
  Makefile.am:

	> Hello,
	>   I've just stumbled over this problem:
	> Makefile.am contains:
	>
	> foo.h: foo.x
	>       $(GENERATOR) foo.x >foo.h
	>
	> But the GENERATOR command failed and I have empty foo.h.

	Use a temporary file and rename that afterwards.

* configure.ac: Add more Doxygen related checks.

DONE:
0.0.1661:
* Fix the dependencies for rules.all in src/Makefile.am (rules.all must 
  depends on all rules.cfg files).

0.0.1634:
* Fix the CLEANFILES handling in tools/moddb/Makefile.am

0.0.1601:
* Fix the BSS clearing (now it hangs the kernel).

0.0.1564:
* Rearranged modules/crypto directory.

0.0.1561:
* Fix the close problem on tools/scripts/map2ie.awk.in when no symbols are
  available.

0.0.1553:
* src/Makefile.am: Rearrange the whole thing.

* tools/scripts/stackcheck.awk.in: Needs debugging ...

0.0.1524:
* Rearrange src/modules/Makefile.sub install-exec-hook rule, it is really
  crappy (using uniq would be fine...).

* tools/scripts/libtest.awk: Rearrange readable(), writable() and exist() ...
  if stat needs test (in order to test the existance of the involved file) then
  think about removing stat ...

* Fix the file close problem (close of not previously opened file) in
  tools/scripts/*.awk. Example:

     > ./tools/scripts/CL2NEWS.sh
     gawk: cmd. line:167: fatal: close: `/dev/stdout' is not an open file, pipe
     or co-process

0.0.1521:
* Add regression test[s] on tools/scripts/rules2syms and
  tools/scripts/mergesyms

0.0.1490:
* tools/scripts/CL2NEWS.sh: It doesn't work with entry 0.0.1478 ...

* tools/scripts/CL2NEWS.sh: It doesn't work with a single entry in a ChangeLog
  file (a ChangeLog file with a single version entry).

0.0.1464:
* tools/ids2def/*: Added standard options (--help, --version and so on).

0.0.1454:
* src/Makefile.am: Remove modules.lst file generation (it will be generated
  in hybrid-build package using moddb executable).

0.0.1351:
* Remove CR/LFs from the following files:
	src/include/libs/misc/checksum.h
	src/libs/misc/huffman.c
	src/dbg/morse.c

0.0.1334:
* tools/scripts/adduniq.awk: Rearrange the whole thing, it is really crappy.

0.0.1309:
* tools/grub: Move files to hybrid-build package.

* tools/grub/build-image.sh: Move to hb package and fix it in order to gather
  all the modules and create a grub file with all of them.

* tools/grub/mtools.conf.in, tools/grub/build-image.sh.in: The 'image' file is
  hardwired, please fix it.

* tools/scripts/*, tools/grub/*: We should check the configure-filled variable
  in order to see if a variable has been filled or not ...

0.0.1308:
* src/libs/bfd: Should we move it to the hybrid-modules package (maybe in the
  src/fs directory ?

0.0.1287:
* Rearrange the configuration summary in configure.ac.

* tools/scripts/lib.awk: Enhance the executable() function in order to be more
  portable.

* The 'make check' target continues to report failures. Add code to
  option_parse function (still missing ...)

* Remove errno declaration in tests/utility.c

* Remove duplicated panic() from tests/utility.c

0.0.1277:
* Rewrite tools/vmach in order to be produced via bison/flex.


0.0.1246:
* tools/scripts/lib.awk: Fixed the unrecognized options like:

    ./tools/scripts/sections.sh -y
    gawk: cmd. line:71: fatal: reference to uninitialized element `ARGV["2"]'

0.0.1243:
* tools/scripts/sections.awk: Fix the sections lma/vma/start address
  calculations... they are all incorrect.

0.0.1241:
* Makefile.sub: C/C++ preprocessors flags are placed in C/C++ compiler flags
  because gcc/g++ barf about them. Find a way to solve the warning placing
  flags like -Wnostdinc -Wnostdinc++ in _CPPFLAGS variable.

0.0.1226:
* lib.awk: Fix the unhandled-option related code. Now the library is
  reporting that, for '--help' it doesn't handle the '--' option ...

0.0.1225:
* Fix the debugger command disappeareance.

  NOTE:
    The problem was caused by the "static" attribute placed at the structure
    typedef

0.0.1194:
* Add a cxxabi.h file in order to contain functions like __cxa_pure_virtual(),
  __cxa_atexit(), __cxa_finalize() ... and so on.

0.0.1192:
* tools/autotools/m4/ax_gcc_version.m4: Complete gcc check-version macro.

0.0.1188:
* tools/fsmgen/fsmgen-scanner.lxx: Remove the CONFIG state from the fsmgen
  scanner.

0.0.1174:
* Fix tools/scripts/symsdump.awk in order to sort the symbols correctly: it
  sorts some __dbg_cmds before _edata and other __dbg_cmds after _edata.
  _edata should be first!

* tools/scripts/symsdump.awk: Fix the sorting algorithm. Appending "A | B" may
  produce wrong results... we must split names from values then order them.
  We must have two hashes: name hash and value hash. We must order name or
  value (depending on user input) then correlate name with values again in
  order to produce the output.

* tools/scripts/symsdump.awk: Enhance in order to process more than one file
  at time.

0.0.1165:
* tools/grub/build-image.sh: Fix the bin directory gathering procedure ... on
  my system it gathers //sbin//grub while it should be /sbin/grub.

0.0.1164:
* tools/grub-config.sh.in: keep tracking of the `pkg*dir' variable in
  `grub-install' script from GRUB's team awaiting the upcoming of GRUB2;
  think about the possibility to make the script more ``awk-only'' proned.

0.0.1146:
* tools/scripts/CL2NEWS.awk: split the 'entry' hash values from ___CNT,
  ___CUR and ___IND.

* tools/scripts/ifdefscheck.awk: Split ___COUNT symbol from infiles hash.

0.0.1123:
* src/include/dbg/debugger/debugger.h: Added a DECLARE_DBG_COMMAND() macro in
  order to simplify the debugger command declaration.

0.0.1118:
* Fix the footprint.awk in order to dump:
  Size of text     : 14145400 (13814K) (t)
  Size of initdata :    29984 (29K) (id)
  Size of data     :    29984 (29K) (d)
  Size of bss      : 169043960 (165082K) (b)
  ROM footprint    : 14175384 (13843K) (t+d)
  RAM footprint    : 183250944 (178956K) (t+id+d+b)

0.0.1090:
* tests: Fix the 'check' automake target (by removing flex/bison generated
  sources in src/boot directory).

* Remove the .h generated files from bison sources (src/boot and tools/lkc)

0.0.1072:
* Add code to tools/scripts/symsdump.awk in order to output the map in
  alphabetical order (-a option) and numerical order (-n option).

0.0.1065:
* tools/scripts/*, tools/grub/*: Update all scripts in order to use
  configure variables instead of hard-wired ones (like AWK, GREP, LN_S etc.).

0.0.1051:
* tools/lkc suffers of a building problem, following the steps:

	1) configure
	2) make config

  The following error will be issued:

    zconf.tab.c:2123:23: lex.zconf.c: No such file or directory

  Following the steps:

	1) configure
	2) make
	3) make config

  Skips the problem...

0.0.1017:
* Fix VERSION_STRING problem in src/include/config/version.h.in. VERSION_STRING
  is defined as

  "@AX_MAJOR_VERSION@.@AX_MINOR_VERSION@.@AX_MICRO_VERSION@-@AX_EXTRA_VERSION@"

  When the AX_EXTRA_VERSION is empty ... the VERSION_STRING could became:

      0.0.1017-

  Instead of 0.0.1017 ...

0.0.1010:
* Fix the default name problem for conf_defname variable in
  tools/lkc/confdata.c.

0.0.991:
* Add rules in src/Makefile.am in order to remove src/boot/option-parser.output
  and src/script/script-parser.output files (generated from bison).

0.0.990:
* Remove the src/include/libs/c/types.h file.

* Add the per-architecture switches in src/include/libs/c/bits/wordsize.h.

0.0.976:
* Fix the missing [FILES] in tools/scripts/checkincludes.awk

* Fix the non-option handling in tools/scripts/bin2c.awk.

0.0.968:
* tools/scripts/lib.awk: Add the remaining code to the help() function.

0.0.928:
* Remove the python related checks in configure.ac.

0.0.860:
* configure.ac: Is really needed the *-loopback device configuration ?

0.0.70?:
* The src/libs/compiler/demangle.c probably doesn't demangle nothing more
  methods ... it should be enhanced ...

0.0.755:
* src/lib/print.c (printk) and src/core/panic.c (panic) have a duplicated
  static char buffer of PRINTK_BUFFER_LENGTH chars. Please remove as soon as
  possible ...

* src/libs/debug/rs232.c: Check it ...

* src/*/rules.cml: take a look to the various menu to see if changes
  are needed.

DONE-RECHECK:
0.0.1629:
* Fix the tools/scripts/getdefine.awk.in <=> src/Makefile.am bug. If getdefine
  get called with -d (debug enable) the output is something like:

    getdefine: Got 32 for __WORDSIZE
    32

  Instead of:

    32

  This behavior is not compliant with elf2symstab expected input.

0.0.1608:
* tools/scripts/Makefile.am: Fix the check-exported target. The qsort function
  is declared ok while it is not used at all (qsort uses itself but no-one is using
  qsort).

0.0.1585:
* Fix the mess that the C and C++ prepocessor checks are doing in configure.ac
  ... there is only a single preprocessor flags variable used: _CPPFLAGS ...

0.0.1528:
* Check AX_MISSING_PACKAGE macro calls in configure in order to fix all
  external packages references (home pages).

0.0.1502:
* */Makefile*: Rearrange all the script related targets.

0.0.1334:
* Makefile.am: The NEWS related rule may cause problems in VPATH builds (there
  is no $(srcdir) variable on each ChangeLog).

0.0.1332:
* tools/scripts/ifdefscheck.awk: Fix the VPATH behavior, it is broken ...

* Complete the tools/scripts/ifdefscheck.awk script.

0.0.1328:
* tools/scripts/includescheck.awk: Fix, it is working badly ... Is the path
  related option really useful ?

0.0.1314:
* Fix compilation problems in external build.

0.0.1248:
* tools/scripts/Makefile.am: Fix the check target. It is reporting that the
  executable() function is ok but it is unused inside the scripts ... we should
  handle "skip" counting line like:

       # assert(executable(...))

  executable() is counted as used while it is not used ...

  NOTE: It is ok, awk is not like C ... assert() is and it will be a function
        so executable() in assert(executable()) is used and must be counted 1

0.0.1202:
* tools/fsmgen/fsmgen-main.cxx: Arrange the option descriptions in order to
  stay aligned ...

0.0.1182:
* tools/autotools/m4/*.m4: Fix all the macros that use AC_DEFINE_UNQUOTED in
  order to use AC_DEFINE as usual autoconf m4 macros. The place proper tweaks
  in src/include/config.h in order to define a ifdef switch to 0 or 1 (we must
  not use an undefined symbol).

0.0.1053:
* Fix the ordering problem in NEWS entries ... try using:

    ./tools/scripts/CL2NEWS.sh ChangeLog*

  to get the following output:

    	0.0.937:
        	* Replaced CML2 configuration with LKC.

	0.0.238:
        	* Fixed in order to be parsed from site autobuild scripts.

	0.0.627:
        	* Updated.

0.0.923:
* tools/scripts/*: Check if the LINT variable set to "fatal" in awk programs
  really works (is like --lint=fatal). On gawk 3.1.4 it works ... on Slack 10.1
  provided gawk seems to not work ...

0.0.73*
* src/Makefile.am: We need to order the compilation objects in order to have
  the multiboot_header in the first 8KB of the produced object file ... this is
  a shame ... we should find a good way to reorder this crappy thing ...

* The stack trace is probably wrecked ... it dumps the demangle() call ...
  but it shouldn't be in the stack ...

* The multiboot header (in ix86 architecture) must be in the first 8KB of
  kernel image.

0.0.706:
* Add tests (using mbchk) for kernel multiboot compliance in tools/grub/buil-*
  scripts.

0.0.70?:
* tools/grub/grub-config.sh.in: write a script that returns the absolute path
  of the GRUB binary and library (ex. directory stage1, stage2, ...);
  it will be invoked by `build-floppy' and `build-loop' scripts.

* tools/grub/grub-config.sh.in: Please add code here ...

* tools/grub/build-loop.sh.in: Please add code here ...
